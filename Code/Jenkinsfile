pipeline {
    agent any
    
    stages {
        stage('📥 Checkout') {
            steps {
                checkout scm
                sh '''
                    echo "📁 Estrutura do projeto:"
                    ls -la Code/
                    echo "✅ Checkout completo"
                '''
            }
        }
        
        stage('🔧 Build Images') {
            steps {
                sh '''
                    echo "🐳 Construindo imagens..."
                    docker build -t backend-app ./Code/backend
                    docker build -t frontend-app ./Code/frontend
                    echo "✅ Imagens construídas"
                '''
            }
        }
        
        stage('🚀 Deploy Sem Perder Banco') {
            steps {
                sh '''
                    echo "🔁 Reiniciando containers SEM perder dados..."
                    
                    # Para e remove APENAS os containers de app, mantendo o banco
                    docker stop code-backend-1 code-frontend-1 2>/dev/null || echo "Containers de app não existiam"
                    docker rm code-backend-1 code-frontend-1 2>/dev/null || echo "Containers de app já removidos"
                    
                    # Recria os containers de app (banco continua rodando)
                    docker run -d --name code-backend-1 -p 3000:3000 \
                      --env-file ./Code/.env \
                      backend-app
                      
                    docker run -d --name code-frontend-1 -p 80:80 \
                      frontend-app
                    
                    echo "⏳ Aguardando inicialização..."
                    sleep 20
                '''
            }
        }
        
        stage('✅ Health Check') {
            steps {
                sh '''
                    echo "📊 Status de TODOS os containers:"
                    docker ps -a --format "table {{.Names}}\\t{{.Status}}\\t{{.Ports}}"
                    
                    echo "🧪 Testando serviços..."
                    
                    # Teste backend
                    if curl -s -f http://localhost:3000 > /dev/null; then
                        echo "🎉 Backend ONLINE - http://23.22.57.128:3000"
                    else
                        echo "❌ Backend OFFLINE"
                        docker logs code-backend-1 --tail=10
                    fi
                    
                    # Teste frontend  
                    if curl -s -f http://localhost:80 > /dev/null; then
                        echo "🎉 Frontend ONLINE - http://23.22.57.128"
                    else
                        echo "❌ Frontend OFFLINE"
                        docker logs code-frontend-1 --tail=10
                    fi
                '''
            }
        }
    }
    
    post {
        success {
            echo "🎊 DEPLOY SUCESSO!"
            echo "🌐 Frontend: http://23.22.57.128"
            echo "🔧 Backend: http://23.22.57.128:3000"
            echo "💾 Banco de dados: PRESERVADO"
        }
        failure {
            echo "💥 DEPLOY FALHOU"
        }
    }
}